plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

configurations {
	// declare a "configuration" named "compile"
	compile
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group
configurations.compile.setCanBeResolved(true)

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

dependencies {
	implementation fileTree('lib')
	compile fileTree('lib')
	implementation 'com.github.sarxos:webcam-capture:0.3.12'
	compile 'com.github.sarxos:webcam-capture:0.3.12'
	implementation 'com.github.markozajc:juno:2.1'
	compile 'com.github.markozajc:juno:2.1'
	implementation 'com.shinyhut:vernacular:1.11'
	compile 'com.shinyhut:vernacular:1.11'
	implementation 'org.jcodec:jcodec:0.2.5'
	compile 'org.jcodec:jcodec:0.2.5'
	implementation 'org.jcodec:jcodec-javase:0.2.5'
	compile 'org.jcodec:jcodec-javase:0.2.5'
	implementation 'com.alphacephei:vosk:0.3.33'
	compile 'com.alphacephei:vosk:0.3.33'
	implementation "org.java-websocket:Java-WebSocket:1.5.2"
	compile "org.java-websocket:Java-WebSocket:1.5.2"
	//implementation "net.java.dev.jna:jna:5.10.0"
	//compile "net.java.dev.jna:jna:5.10.0"
	//implementation "net.java.dev.jna:jna-platform:5.10.0"
	//compile "net.java.dev.jna:jna-platform:5.10.0"
	//implementation "org.json:json:20211205"
	//compile "org.json:json:20211205"
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}

	from {
		duplicatesStrategy=DuplicatesStrategy.EXCLUDE
		configurations.compile.collect {it.isDirectory() ? it : zipTree(it) }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
		mavenCentral()
		maven {
			url "http://www.alphacephei.com.com/vosk/"
		}
	}
}
